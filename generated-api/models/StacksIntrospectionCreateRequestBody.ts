/* tslint:disable */
/* eslint-disable */
/**
 * Skill Climbing
 * スキルの積み上げアプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StacksIntrospectionCreateRequestBody
 */
export interface StacksIntrospectionCreateRequestBody {
    /**
     * 積み上げの評価
     * @type {number}
     * @memberof StacksIntrospectionCreateRequestBody
     */
    evaluation: number;
    /**
     * 積み上げの評価理由
     * @type {string}
     * @memberof StacksIntrospectionCreateRequestBody
     */
    reason: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof StacksIntrospectionCreateRequestBody
     */
    keeps: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof StacksIntrospectionCreateRequestBody
     */
    problems: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof StacksIntrospectionCreateRequestBody
     */
    tries: Array<string>;
}

/**
 * Check if a given object implements the StacksIntrospectionCreateRequestBody interface.
 */
export function instanceOfStacksIntrospectionCreateRequestBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "evaluation" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "keeps" in value;
    isInstance = isInstance && "problems" in value;
    isInstance = isInstance && "tries" in value;

    return isInstance;
}

export function StacksIntrospectionCreateRequestBodyFromJSON(json: any): StacksIntrospectionCreateRequestBody {
    return StacksIntrospectionCreateRequestBodyFromJSONTyped(json, false);
}

export function StacksIntrospectionCreateRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksIntrospectionCreateRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'evaluation': json['evaluation'],
        'reason': json['reason'],
        'keeps': json['keeps'],
        'problems': json['problems'],
        'tries': json['tries'],
    };
}

export function StacksIntrospectionCreateRequestBodyToJSON(value?: StacksIntrospectionCreateRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'evaluation': value.evaluation,
        'reason': value.reason,
        'keeps': value.keeps,
        'problems': value.problems,
        'tries': value.tries,
    };
}

