/* tslint:disable */
/* eslint-disable */
/**
 * Skill Climbing
 * スキルの積み上げアプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StacksUpdateRequestBody
 */
export interface StacksUpdateRequestBody {
    /**
     * 積み上げタイトル
     * @type {string}
     * @memberof StacksUpdateRequestBody
     */
    title: string;
    /**
     * 積み上げ時間
     * @type {number}
     * @memberof StacksUpdateRequestBody
     */
    minutes: number;
    /**
     * スキルID
     * @type {number}
     * @memberof StacksUpdateRequestBody
     */
    skillId: number;
    /**
     * 積み上げ内容
     * @type {string}
     * @memberof StacksUpdateRequestBody
     */
    description: string | null;
    /**
     * 
     * @type {Date}
     * @memberof StacksUpdateRequestBody
     */
    stackedAt: Date;
}

/**
 * Check if a given object implements the StacksUpdateRequestBody interface.
 */
export function instanceOfStacksUpdateRequestBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "minutes" in value;
    isInstance = isInstance && "skillId" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "stackedAt" in value;

    return isInstance;
}

export function StacksUpdateRequestBodyFromJSON(json: any): StacksUpdateRequestBody {
    return StacksUpdateRequestBodyFromJSONTyped(json, false);
}

export function StacksUpdateRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksUpdateRequestBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'minutes': json['minutes'],
        'skillId': json['skill_id'],
        'description': json['description'],
        'stackedAt': (new Date(json['stacked_at'])),
    };
}

export function StacksUpdateRequestBodyToJSON(value?: StacksUpdateRequestBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'minutes': value.minutes,
        'skill_id': value.skillId,
        'description': value.description,
        'stacked_at': (value.stackedAt.toISOString()),
    };
}

