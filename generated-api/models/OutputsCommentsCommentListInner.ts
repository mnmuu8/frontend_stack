/* tslint:disable */
/* eslint-disable */
/**
 * Skill Climbing
 * スキルの積み上げアプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OutputsOutputUser } from './OutputsOutputUser';
import {
    OutputsOutputUserFromJSON,
    OutputsOutputUserFromJSONTyped,
    OutputsOutputUserToJSON,
} from './OutputsOutputUser';

/**
 * 
 * @export
 * @interface OutputsCommentsCommentListInner
 */
export interface OutputsCommentsCommentListInner {
    /**
     * アウトプットへのコメントID
     * @type {number}
     * @memberof OutputsCommentsCommentListInner
     */
    id: number;
    /**
     * アウトプットへのコメント内容
     * @type {string}
     * @memberof OutputsCommentsCommentListInner
     */
    content: string;
    /**
     * 
     * @type {OutputsOutputUser}
     * @memberof OutputsCommentsCommentListInner
     */
    user: OutputsOutputUser;
    /**
     * 
     * @type {Array<string>}
     * @memberof OutputsCommentsCommentListInner
     */
    images: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof OutputsCommentsCommentListInner
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof OutputsCommentsCommentListInner
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the OutputsCommentsCommentListInner interface.
 */
export function instanceOfOutputsCommentsCommentListInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function OutputsCommentsCommentListInnerFromJSON(json: any): OutputsCommentsCommentListInner {
    return OutputsCommentsCommentListInnerFromJSONTyped(json, false);
}

export function OutputsCommentsCommentListInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutputsCommentsCommentListInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'user': OutputsOutputUserFromJSON(json['user']),
        'images': json['images'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function OutputsCommentsCommentListInnerToJSON(value?: OutputsCommentsCommentListInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'content': value.content,
        'user': OutputsOutputUserToJSON(value.user),
        'images': value.images,
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
    };
}

