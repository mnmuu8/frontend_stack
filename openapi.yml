openapi: 3.0.0
info:
  title: Skill Climbing
  version: 1.0.0
  description: スキルの積み上げアプリ

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://skill-climbing.onrender.com
    description: Production server

paths:
  /api/login:
    post:
      summary: ログイン
      operationId: api.auth.login
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequestBody'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth_Login'
        '401':
          description: 認証エラー（ユーザーが存在しない/パスワードが合ってない）
        '422':
          description: バリデーションエラー

  /api/v1/stacks:
    get:
      summary: 積み上げ一覧
      operationId: api.v1.stacks.index
      tags:
        - Stack
      security: []
      parameters:
        - name: user_id
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Users_User_Id'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stacks_StackList'
        '401':
          description: 認証エラー
    post:
      summary: 積み上げ作成
      operationId: api.v1.stacks.create
      tags:
        - Stack
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StacksCreateRequestBody'
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stacks_Stack'
        '401':
          description: 認証エラー
        '404':
          description: スキルランクが存在しない
        '409':
          description: 同一情報のスキルランクがすでに存在する
        '422':
          description: バリデーションエラー

  /api/v1/stacks/{stack_id}/introspection:
    get:
      summary: 積み上げの反省詳細API
      operationId: api.v1.stacks.introspections.show
      tags:
        - Stack
        - Introspection
      security: []
      parameters:
        - name: stack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Stacks_Stack_Id'
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stacks_Introspections_Introspection'
        '401':
          description: 認証エラー
        '404':
          description: 積み上げが存在しない/反省が存在しない
    patch:
      summary: 積み上げの反省更新API
      operationId: api.v1.stacks.introspections.update
      tags:
        - Stack
        - Introspection
      security: []
      parameters:
        - name: stack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Stacks_Stack_Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stacks_IntrospectionUpdateRequestBody'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stacks_Introspections_Introspection'
        '401':
          description: 認証エラー
        '404':
          description: 積み上げが存在しない/反省が存在しない
        '422':
          description: バリデーションエラー

  /api/v1/stacks/{stack_id}/introspections:
    post:
      summary: 積み上げの反省登録API
      operationId: api.v1.stacks.introspections.create
      tags:
        - Stack
        - Introspection
      security: []
      parameters:
        - name: stack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Stacks_Stack_Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stacks_IntrospectionCreateRequestBody'
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stacks_Introspections_Introspection'
        '401':
          description: 認証エラー
        '404':
          description: 積み上げが存在しない
        '409':
          description: すでに反省が登録されている
        '422':
          description: バリデーションエラー

  /api/v1/skills:
    get:
      summary: スキルマスタデータ取得
      operationId: api.v1.skills.index
      tags:
        - Skill
      security: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skills_SkillList'
        '401':
          description: 認証エラー

  /api/v1/users/{user_id}:
    get:
      summary: ユーザーデータ詳細
      operationId: api.v1.users.show
      tags:
        - User
      security: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Users_User_Id'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_User'
        '401':
          description: 認証エラー
        '404':
          description: ユーザーが存在しない
        '422':
          description: バリデーションエラー

    patch:
      summary: ユーザーデータ更新
      operationId: api.v1.users.update
      tags:
        - User
      security: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Users_User_Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequestBody'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_User'
        '401':
          description: 認証エラー
        '404':
          description: ユーザーが存在しない
        '409':
          description: すでに登録されているメールアドレスを入力している
        '422':
          description: バリデーションエラー

  /api/v1/teams:
    get:
      summary: チーム一覧
      operationId: api.v1.teams.index
      tags:
        - Team
      security: []
      parameters:
        - name: name
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Teams_Team_Name'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams_TeamList'
        '401':
          description: 認証エラー
        '422':
          description: バリデーションエラー
    post:
      summary: チーム作成
      operationId: api.v1.teams.create
      tags:
        - Team
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequestBody'
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams_Team'
        '401':
          description: 認証エラー
        '409':
          description: チーム名が重複している/管理者ではない
        '422':
          description: バリデーションエラー
  /api/v1/teams/{team_id}:
    patch:
      summary: チーム更新
      operationId: api.v1.teams.update
      tags:
        - Team
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequestBody'
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Teams_Team_Id'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams_Team'
        '401':
          description: 認証エラー
        '404':
          description: チームが存在しない
        '409':
          description: チーム名が重複している/管理者ではない
        '422':
          description: バリデーションエラー
  /api/v1/teams/{team_id}/stack_ranking:
    get:
      summary: チーム内積み上げ時間ランキング
      operationId: api.v1.teams.stack_ranking
      tags:
        - Team
      security: []
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Teams_Team_Id'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams_StackRankingList'
        '401':
          description: 認証エラー
        '404':
          description: チームが存在しない
        '422':
          description: バリデーションエラー

  /api/v1/outputs/:
    get:
      summary: アウトプット一覧
      operationId: api.v1.outputs.index
      tags:
        - Output
      security: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outputs_OutputList'
        '401':
          description: 認証エラー
    post:
      summary: アウトプット作成
      operationId: api.v1.outputs.create
      tags:
        - Output
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutputCreateRequestBody'
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outputs_Output'
        '401':
          description: 認証エラー
        '422':
          description: バリデーションエラー
  /api/v1/outputs/{output_id}:
    get:
      summary: アウトプット詳細
      operationId: api.v1.outputs.show
      tags:
        - Output
      security: []
      parameters:
        - name: output_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Outputs_Output_Id'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outputs_Output'
        '401':
          description: 認証エラー
        '404':
          description: アウトプットが存在しない
        '422':
          description: バリデーションエラー

components:
  schemas:
    Auth_Login:
      type: object
      required:
        - token_type
        - access_token
        - user_id
        - exp
        - role
      properties:
        token_type:
          allOf:
            - $ref: '#/components/schemas/Auth_Login_TokenType'
          nullable: false
        access_token:
          allOf:
            - $ref: '#/components/schemas/Auth_Login_AccessToken'
          nullable: false
        user_id:
          allOf:
            - $ref: '#/components/schemas/Users_User_Id'
          nullable: false
        exp:
          allOf:
            - $ref: '#/components/schemas/Auth_Login_Exp'
          nullable: false
        role:
          allOf:
            - $ref: '#/components/schemas/Users_User_Role'
          nullable: false

    Auth_Login_TokenType:
      type: string
      description: アクセストークンタイプ
      example: Bearer

    Auth_Login_AccessToken:
      type: string
      description: アクセストークン
      example: access_token

    Auth_Login_Exp:
      type: integer
      description: 有効期限切れまでの秒数
      example: 123456

    Stacks_StackList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Stacks_Stack'

    Stacks_Stack:
      type: object
      required:
        - id
        - title
        - minutes
        - skill
        - description
        - stacked_at
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Id'
          nullable: false
        title:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Title'
          nullable: false
        minutes:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Minutes'
          nullable: false
        skill:
          allOf:
            - $ref: '#/components/schemas/Skills_Skill'
          nullable: false
        description:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Description'
          nullable: true
        stacked_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_Introspections_Introspection:
      type: object
      required:
        - id
        - evaluation
        - reason
        - keeps
        - problems
        - tries
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Id'
          nullable: false
        evaluation:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Evaluation'
          nullable: false
        reason:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Reason'
          nullable: false
        keeps:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Stacks_Introspections_Keeps_Keep'
        problems:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Stacks_Introspections_Problems_Problem'
        tries:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Stacks_Introspections_Tries_Try'
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_Introspections_Introspection_Id:
      type: integer
      description: 積み上げ反省ID
      example: 1

    Stacks_Introspections_Introspection_Evaluation:
      type: integer
      description: 積み上げの評価
      example: 85

    Stacks_Introspections_Introspection_Reason:
      type: string
      description: 積み上げの評価理由
      example: 今回は計画通りに積み上げられて良かったです。

    Stacks_Introspections_Keeps_Keep:
      type: object
      required:
        - id
        - content
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Keeps_Keep_Id'
          nullable: false
        content:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Keeps_Keep_Content'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_Introspections_Keeps_Keep_Id:
      type: integer
      description: 反省のKeepID
      example: 1
    Stacks_Introspections_Keeps_Keep_Content:
      type: string
      description: 反省のKeep項目
      example: 計画通りに積み上げられた

    Stacks_Introspections_Problems_Problem:
      type: object
      required:
        - id
        - content
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Problems_Problem_Id'
          nullable: false
        content:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Problems_Problem_Content'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_Introspections_Problems_Problem_Id:
      type: integer
      description: 反省のProblemID
      example: 1
    Stacks_Introspections_Problems_Problem_Content:
      type: string
      description: 反省のProblem項目
      example: スマホを触る時間が多かった

    Stacks_Introspections_Tries_Try:
      type: object
      required:
        - id
        - content
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Tries_Try_Id'
          nullable: false
        content:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Tries_Try_Content'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_Introspections_Tries_Try_Id:
      type: integer
      description: 反省のTryID
      example: 1
    Stacks_Introspections_Tries_Try_Content:
      type: string
      description: 反省のTry項目
      example: 作業時はスマホを寝室に置いておく

    Stacks_Stack_Id:
      type: integer
      description: 積み上げID
      example: 1

    Stacks_Stack_Title:
      type: string
      description: 積み上げタイトル
      example: 積み上げタイトル

    Stacks_Stack_Minutes:
      type: integer
      description: 積み上げ時間
      example: 100

    Stacks_Stack_Description:
      type: string
      description: 積み上げ内容
      example: 積み上げ内容

    Skills_SkillList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Skills_Skill'

    Skills_Skill:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Skills_Skill_Id'
          nullable: false
        name:
          allOf:
            - $ref: '#/components/schemas/Skills_Skill_Name'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Skills_Skill_Id:
      type: integer
      description: スキルID
      example: 1

    Skills_Skill_Name:
      type: string
      description: スキル名
      example: Ruby

    Users_User:
      type: object
      required:
        - id
        - name
        - email
        - profile_content
        - role
        - team
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Users_User_Id'
          nullable: false
        name:
          allOf:
            - $ref: '#/components/schemas/Users_User_Name'
          nullable: false
        email:
          allOf:
            - $ref: '#/components/schemas/Users_User_Email'
          nullable: false
        profile_content:
          allOf:
            - $ref: '#/components/schemas/Users_User_ProfileContent'
          nullable: true
        role:
          allOf:
            - $ref: '#/components/schemas/Users_User_Role'
          nullable: false
        team:
          allOf:
            - $ref: '#/components/schemas/Teams_Team'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Users_User_Id:
      type: integer
      description: ユーザーID
      example: 1

    Users_User_Name:
      type: string
      description: ユーザー名
      example: 田中太郎

    Users_User_Email:
      type: string
      description: ユーザーのメールアドレス
      example: example@example.com

    Users_User_ProfileContent:
      type: string
      description: ユーザーのプロフィール文
      example: よろしくお願いします。

    Users_User_Role:
      type: string
      description: ユーザー役割
      example: admin
      enum:
        - admin
        - general

    Users_User_Password:
      type: string
      description: ユーザーのパスワード
      example: password

    Teams_TeamList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Teams_Team'

    Teams_Team:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Teams_Team_Id'
          nullable: false
        name:
          allOf:
            - $ref: '#/components/schemas/Teams_Team_Name'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Teams_StackRankingList:
      type: object
      required:
        - stack_rankings
      properties:
        stack_rankings:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Teams_StackRanking'

    Teams_Team_Id:
      type: integer
      description: チームID
      example: 1

    Teams_Team_Name:
      type: string
      description: チーム名
      example: チームA

    Teams_StackRanking:
      type: object
      required:
        - order
        - user_name
      properties:
        order:
          allOf:
            - $ref: '#/components/schemas/Teams_StackRanking_Order'
          nullable: false
        user_name:
          allOf:
            - $ref: '#/components/schemas/Users_User_Name'
          nullable: false

    Teams_StackRanking_Order:
      type: integer
      description: 積み上げランキング順位
      example: 1

    Outputs_OutputList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Outputs_Output'

    Outputs_Output:
      type: object
      required:
        - id
        - content
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Outputs_Output_Id'
          nullable: false
        content:
          allOf:
            - $ref: '#/components/schemas/Outputs_Output_Content'
          nullable: false
        created_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false
        updated_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Outputs_Output_Id:
      type: integer
      description: アウトプットID
      example: 1

    Outputs_Output_Content:
      type: string
      description: アウトプット内容
      example: アウトプットします

    DateTime:
      type: string
      format: date-time
      example: '2023-01-01T00:00:00+09:00'

    AuthLoginRequestBody:
      type: object
      required:
        - email
        - password
      properties:
        email:
          allOf:
            - $ref: '#/components/schemas/Users_User_Email'
          nullable: false
        password:
          allOf:
            - $ref: '#/components/schemas/Users_User_Password'
          nullable: false

    StacksCreateRequestBody:
      type: object
      required:
        - title
        - minutes
        - skill_id
        - user_id
        - description
        - stacked_at
      properties:
        title:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Title'
          nullable: false
        minutes:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Minutes'
          nullable: false
        skill_id:
          allOf:
            - $ref: '#/components/schemas/Skills_Skill_Id'
          nullable: false
        user_id:
          allOf:
            - $ref: '#/components/schemas/Users_User_Id'
          nullable: false
        description:
          allOf:
            - $ref: '#/components/schemas/Stacks_Stack_Description'
          nullable: true
        stacked_at:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          nullable: false

    Stacks_IntrospectionCreateRequestBody:
      type: object
      required:
        - evaluation
        - reason
        - keep_contents
        - problem_contents
        - try_contents
      properties:
        evaluation:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Evaluation'
          nullable: false
        reason:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Reason'
          nullable: false
        keep_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Keeps_Keep_Content'
        problem_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Problems_Problem_Content'
        try_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Tries_Try_Content'

    Stacks_IntrospectionUpdateRequestBody:
      type: object
      required:
        - evaluation
        - reason
        - keep_contents
        - problem_contents
        - try_contents
      properties:
        evaluation:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Evaluation'
          nullable: false
        reason:
          allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Introspection_Reason'
          nullable: false
        keep_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Keeps_Keep_Content'
        problem_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Problems_Problem_Content'
        try_contents:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Stacks_Introspections_Tries_Try_Content'

    UserUpdateRequestBody:
      type: object
      required:
        - name
        - email
        - profile_content
        - role
        - team_id
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Users_User_Name'
          nullable: false
        email:
          allOf:
            - $ref: '#/components/schemas/Users_User_Email'
          nullable: false
        profile_content:
          allOf:
            - $ref: '#/components/schemas/Users_User_ProfileContent'
          nullable: true
        role:
          allOf:
            - $ref: '#/components/schemas/Users_User_Role'
          nullable: false
        team_id:
          allOf:
            - $ref: '#/components/schemas/Teams_Team_Id'
          nullable: true

    TeamCreateRequestBody:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Teams_Team_Name'
          nullable: false

    TeamUpdateRequestBody:
      type: object
      required:
        - name
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/Teams_Team_Name'
          nullable: false

    OutputCreateRequestBody:
      type: object
      required:
        - content
      properties:
        content:
          allOf:
            - $ref: '#/components/schemas/Outputs_Output_Content'
          nullable: false
