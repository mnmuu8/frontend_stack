/* tslint:disable */
/* eslint-disable */
/**
 * Skill Climbing
 * スキルの積み上げアプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StacksIntrospectionsIntrospectionKeepsInner } from './StacksIntrospectionsIntrospectionKeepsInner';
import {
    StacksIntrospectionsIntrospectionKeepsInnerFromJSON,
    StacksIntrospectionsIntrospectionKeepsInnerFromJSONTyped,
    StacksIntrospectionsIntrospectionKeepsInnerToJSON,
} from './StacksIntrospectionsIntrospectionKeepsInner';
import type { StacksIntrospectionsIntrospectionProblemsInner } from './StacksIntrospectionsIntrospectionProblemsInner';
import {
    StacksIntrospectionsIntrospectionProblemsInnerFromJSON,
    StacksIntrospectionsIntrospectionProblemsInnerFromJSONTyped,
    StacksIntrospectionsIntrospectionProblemsInnerToJSON,
} from './StacksIntrospectionsIntrospectionProblemsInner';
import type { StacksIntrospectionsIntrospectionTriesInner } from './StacksIntrospectionsIntrospectionTriesInner';
import {
    StacksIntrospectionsIntrospectionTriesInnerFromJSON,
    StacksIntrospectionsIntrospectionTriesInnerFromJSONTyped,
    StacksIntrospectionsIntrospectionTriesInnerToJSON,
} from './StacksIntrospectionsIntrospectionTriesInner';

/**
 * 
 * @export
 * @interface StacksIntrospectionsIntrospection
 */
export interface StacksIntrospectionsIntrospection {
    /**
     * 積み上げ反省ID
     * @type {number}
     * @memberof StacksIntrospectionsIntrospection
     */
    id: number;
    /**
     * 積み上げの評価
     * @type {number}
     * @memberof StacksIntrospectionsIntrospection
     */
    evaluation: number;
    /**
     * 積み上げの評価理由
     * @type {string}
     * @memberof StacksIntrospectionsIntrospection
     */
    reason: string;
    /**
     * 
     * @type {Array<StacksIntrospectionsIntrospectionKeepsInner>}
     * @memberof StacksIntrospectionsIntrospection
     */
    keeps: Array<StacksIntrospectionsIntrospectionKeepsInner>;
    /**
     * 
     * @type {Array<StacksIntrospectionsIntrospectionProblemsInner>}
     * @memberof StacksIntrospectionsIntrospection
     */
    problems: Array<StacksIntrospectionsIntrospectionProblemsInner>;
    /**
     * 
     * @type {Array<StacksIntrospectionsIntrospectionTriesInner>}
     * @memberof StacksIntrospectionsIntrospection
     */
    tries: Array<StacksIntrospectionsIntrospectionTriesInner>;
    /**
     * 
     * @type {Date}
     * @memberof StacksIntrospectionsIntrospection
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof StacksIntrospectionsIntrospection
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the StacksIntrospectionsIntrospection interface.
 */
export function instanceOfStacksIntrospectionsIntrospection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "evaluation" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "keeps" in value;
    isInstance = isInstance && "problems" in value;
    isInstance = isInstance && "tries" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function StacksIntrospectionsIntrospectionFromJSON(json: any): StacksIntrospectionsIntrospection {
    return StacksIntrospectionsIntrospectionFromJSONTyped(json, false);
}

export function StacksIntrospectionsIntrospectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StacksIntrospectionsIntrospection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'evaluation': json['evaluation'],
        'reason': json['reason'],
        'keeps': ((json['keeps'] as Array<any>).map(StacksIntrospectionsIntrospectionKeepsInnerFromJSON)),
        'problems': ((json['problems'] as Array<any>).map(StacksIntrospectionsIntrospectionProblemsInnerFromJSON)),
        'tries': ((json['tries'] as Array<any>).map(StacksIntrospectionsIntrospectionTriesInnerFromJSON)),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function StacksIntrospectionsIntrospectionToJSON(value?: StacksIntrospectionsIntrospection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'evaluation': value.evaluation,
        'reason': value.reason,
        'keeps': ((value.keeps as Array<any>).map(StacksIntrospectionsIntrospectionKeepsInnerToJSON)),
        'problems': ((value.problems as Array<any>).map(StacksIntrospectionsIntrospectionProblemsInnerToJSON)),
        'tries': ((value.tries as Array<any>).map(StacksIntrospectionsIntrospectionTriesInnerToJSON)),
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
    };
}

