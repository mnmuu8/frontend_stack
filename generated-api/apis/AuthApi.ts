/* tslint:disable */
/* eslint-disable */
/**
 * Skill Climbing
 * スキルの積み上げアプリ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthLogin,
  AuthLoginRequestBody,
} from '../models';
import {
    AuthLoginFromJSON,
    AuthLoginToJSON,
    AuthLoginRequestBodyFromJSON,
    AuthLoginRequestBodyToJSON,
} from '../models';

export interface ApiAuthLoginRequest {
    authLoginRequestBody: AuthLoginRequestBody;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * ログイン
     */
    async apiAuthLoginRaw(requestParameters: ApiAuthLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthLogin>> {
        if (requestParameters.authLoginRequestBody === null || requestParameters.authLoginRequestBody === undefined) {
            throw new runtime.RequiredError('authLoginRequestBody','Required parameter requestParameters.authLoginRequestBody was null or undefined when calling apiAuthLogin.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthLoginRequestBodyToJSON(requestParameters.authLoginRequestBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthLoginFromJSON(jsonValue));
    }

    /**
     * ログイン
     */
    async apiAuthLogin(requestParameters: ApiAuthLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthLogin> {
        const response = await this.apiAuthLoginRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
